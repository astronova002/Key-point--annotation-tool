# Generated by Django 5.2.3 on 2025-06-15 18:44

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('annotations', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Verification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('decision', models.CharField(choices=[('APPROVED', 'Approved'), ('APPROVED_WITH_CORRECTIONS', 'Approved with Corrections'), ('MINOR_REVISION_NEEDED', 'Minor Revision Needed'), ('MAJOR_REVISION_NEEDED', 'Major Revision Needed'), ('REJECTED', 'Rejected')], max_length=30)),
                ('corrected_keypoints', models.JSONField(blank=True, help_text="Verifier's corrections to keypoints", null=True)),
                ('correction_summary', models.TextField(blank=True, null=True)),
                ('detailed_feedback', models.TextField(blank=True, null=True)),
                ('feedback_to_annotator', models.TextField(blank=True, help_text='Constructive feedback for annotator improvement', null=True)),
                ('internal_notes', models.TextField(blank=True, help_text='Internal notes for admin/research use', null=True)),
                ('overall_quality_score', models.IntegerField(help_text='Overall quality rating 1-10', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('anatomical_accuracy', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('technical_precision', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('completeness_score', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('keypoint_accuracy_scores', models.JSONField(blank=True, help_text='Per-keypoint accuracy assessment', null=True)),
                ('problematic_keypoints', models.JSONField(blank=True, help_text='List of keypoint IDs with issues', null=True)),
                ('rejection_reason', models.CharField(blank=True, choices=[('POOR_IMAGE_QUALITY', 'Poor Image Quality'), ('INCORRECT_KEYPOINTS', 'Incorrect Keypoints'), ('ANATOMICAL_ERRORS', 'Anatomical Errors'), ('INCOMPLETE_ANNOTATION', 'Incomplete Annotation'), ('TECHNICAL_ISSUES', 'Technical Issues'), ('GUIDELINES_VIOLATION', 'Guidelines Violation'), ('OTHER', 'Other')], max_length=30, null=True)),
                ('rejection_details', models.TextField(blank=True, null=True)),
                ('can_be_reannotated', models.BooleanField(default=True)),
                ('requires_specialist_input', models.BooleanField(default=False)),
                ('clinical_relevance', models.CharField(blank=True, choices=[('HIGH', 'High'), ('MEDIUM', 'Medium'), ('LOW', 'Low')], max_length=10, null=True)),
                ('diagnostic_quality', models.CharField(blank=True, choices=[('EXCELLENT', 'Excellent'), ('GOOD', 'Good'), ('ADEQUATE', 'Adequate'), ('POOR', 'Poor')], max_length=10, null=True)),
                ('research_usability', models.BooleanField(default=True)),
                ('verification_time_seconds', models.IntegerField()),
                ('complexity_rating', models.IntegerField(blank=True, help_text='How difficult was this to verify (1-5)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('certainty_level', models.IntegerField(help_text="Verifier's confidence in their decision (1-10)", validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('is_final_decision', models.BooleanField(default=True)),
                ('requires_second_opinion', models.BooleanField(default=False)),
                ('escalated_to_admin', models.BooleanField(default=False)),
                ('verified_at', models.DateTimeField(auto_now_add=True)),
                ('annotation', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='verification', to='annotations.annotation')),
                ('verifier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='verifications_performed', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'verifications',
                'ordering': ['-verified_at'],
                'indexes': [models.Index(fields=['annotation'], name='verificatio_annotat_0c2391_idx'), models.Index(fields=['verifier'], name='verificatio_verifie_5c026b_idx'), models.Index(fields=['decision'], name='verificatio_decisio_6efc38_idx'), models.Index(fields=['overall_quality_score'], name='verificatio_overall_7ffb55_idx'), models.Index(fields=['verified_at'], name='verificatio_verifie_f299ab_idx'), models.Index(fields=['requires_second_opinion'], name='verificatio_require_62f227_idx')],
            },
        ),
    ]
