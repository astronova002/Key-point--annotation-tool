# Generated by Django 5.2.3 on 2025-06-15 18:44

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('action', models.CharField(help_text="Specific action taken (e.g., 'BATCH_CREATED', 'ANNOTATION_SUBMITTED')", max_length=100)),
                ('action_category', models.CharField(choices=[('USER_MANAGEMENT', 'User Management'), ('IMAGE_PROCESSING', 'Image Processing'), ('ANNOTATION', 'Annotation'), ('VERIFICATION', 'Verification'), ('SYSTEM', 'System')], max_length=20)),
                ('resource_type', models.CharField(help_text="Type of resource affected (e.g., 'Image', 'Annotation', 'Batch')", max_length=50)),
                ('resource_id', models.CharField(max_length=100)),
                ('resource_name', models.CharField(blank=True, max_length=255, null=True)),
                ('old_values', models.JSONField(blank=True, help_text='Previous state of the resource', null=True)),
                ('new_values', models.JSONField(blank=True, help_text='New state of the resource', null=True)),
                ('change_summary', models.TextField(blank=True, null=True)),
                ('session_id', models.CharField(blank=True, max_length=100, null=True)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('api_endpoint', models.CharField(blank=True, max_length=200, null=True)),
                ('request_method', models.CharField(blank=True, max_length=10, null=True)),
                ('action_duration_ms', models.IntegerField(blank=True, null=True)),
                ('processing_time_ms', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(choices=[('SUCCESS', 'Success'), ('FAILED', 'Failed'), ('PARTIAL', 'Partial')], default='SUCCESS', max_length=20)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('warning_messages', models.JSONField(blank=True, null=True)),
                ('batch_context', models.JSONField(blank=True, help_text='Related batch information', null=True)),
                ('annotation_context', models.JSONField(blank=True, help_text='Related annotation details', null=True)),
                ('system_context', models.JSONField(blank=True, help_text='System state, versions, etc.', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audit_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'audit_logs',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', 'action'], name='audit_logs_user_id_d685f3_idx'), models.Index(fields=['resource_type', 'resource_id'], name='audit_logs_resourc_bda8a6_idx'), models.Index(fields=['created_at'], name='audit_logs_created_262184_idx'), models.Index(fields=['action_category'], name='audit_logs_action__e82efb_idx'), models.Index(fields=['status'], name='audit_logs_status_515e02_idx'), models.Index(fields=['ip_address'], name='audit_logs_ip_addr_919cb4_idx')],
            },
        ),
        migrations.CreateModel(
            name='PerformanceMetrics',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('metrics_date', models.DateField()),
                ('period_type', models.CharField(choices=[('DAILY', 'Daily'), ('WEEKLY', 'Weekly'), ('MONTHLY', 'Monthly'), ('QUARTERLY', 'Quarterly')], max_length=20)),
                ('period_start', models.DateTimeField()),
                ('period_end', models.DateTimeField()),
                ('images_annotated', models.IntegerField(default=0)),
                ('annotations_created', models.IntegerField(default=0)),
                ('annotations_revised', models.IntegerField(default=0)),
                ('avg_time_per_annotation_minutes', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('total_annotation_time_minutes', models.IntegerField(default=0)),
                ('annotations_verified', models.IntegerField(default=0)),
                ('annotations_approved', models.IntegerField(default=0)),
                ('annotations_rejected', models.IntegerField(default=0)),
                ('avg_verification_time_minutes', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('accuracy_score', models.DecimalField(decimal_places=2, default=0.0, max_digits=3, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('avg_quality_rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('improvement_trend', models.DecimalField(decimal_places=2, default=0.0, help_text='Week-over-week improvement rate', max_digits=3)),
                ('productivity_score', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('consistency_score', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('learning_curve_indicator', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('keypoint_accuracy_breakdown', models.JSONField(blank=True, help_text='Per-keypoint accuracy statistics', null=True)),
                ('difficulty_distribution', models.JSONField(blank=True, help_text='Distribution of easy/medium/hard cases', null=True)),
                ('time_distribution', models.JSONField(blank=True, help_text='Time spent patterns', null=True)),
                ('error_patterns', models.JSONField(blank=True, help_text='Common mistake types and frequencies', null=True)),
                ('peer_comparison_percentile', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('improvement_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('system_uptime_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('avg_processing_time_ms', models.IntegerField(blank=True, null=True)),
                ('error_rate_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('calculated_at', models.DateTimeField(auto_now_add=True)),
                ('calculation_version', models.CharField(default='1.0', max_length=10)),
                ('data_completeness', models.DecimalField(decimal_places=2, default=1.0, help_text='How complete the source data was', max_digits=3)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performance_metrics', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'performance_metrics',
                'ordering': ['-metrics_date'],
                'indexes': [models.Index(fields=['user', 'metrics_date'], name='performance_user_id_88d5c2_idx'), models.Index(fields=['period_type', 'period_start'], name='performance_period__63de16_idx'), models.Index(fields=['accuracy_score'], name='performance_accurac_0480b7_idx'), models.Index(fields=['calculated_at'], name='performance_calcula_c7589f_idx')],
                'unique_together': {('user', 'metrics_date', 'period_type')},
            },
        ),
    ]
